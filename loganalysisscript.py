# -*- coding: utf-8 -*-
"""LogAnalysisScript.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eAblpoozhE0SEgzaZpYTKTu0lQ-7TEu8
"""

#IMPORTING LIBRARIES
import re
from collections import Counter
import csv

#IMPORTING FILES
log_file = 'sample.log'
output_csv = 'log_analysis_results.csv'

#TAKING DEFAULT VALUE AS THRESHOLD
FAILED_LOGIN_THRESHOLD = 10

#REGEX PATTERNS FOR EXTRACTING DATA
ip_pattern = r'(\d{1,3}(?:\.\d{1,3}){3})'
endpoint_pattern = r'\"[A-Z]+\s+(\S+)\s+HTTP\/'
failed_login_pattern = r'401'

#PROCESSING LOG FILE
with open(log_file, 'r') as file:
    for line in file:
      #EXTRACTING IP ADDRESS
      ip_match = re.search(ip_pattern, line)
      if ip_match:
            ip = ip_match.group(1)
            request_counts[ip] += 1

#DATA STORAGE
request_counts = Counter()
endpoint_counts = Counter()
failed_login_attempts = Counter()

#EXTRACTING ENDPOINTS
endpoint_match = re.search(endpoint_pattern, line)
if endpoint_match:
            endpoint = endpoint_match.group(1)
            endpoint_counts[endpoint] += 1

#CHECK FOR FAILED LOGIN
if 'Invalid credentials' in line or re.search(failed_login_pattern, line):
            if ip_match:
                failed_login_attempts[ip] += 1

#SORTING RESULTS
sorted_requests = request_counts.most_common()
sorted_endpoints = endpoint_counts.most_common()
sorted_failed_logins = [(ip, count) for ip, count in failed_login_attempts.items() if count > FAILED_LOGIN_THRESHOLD]

#MOST ACESSED ENDPOINT
most_accessed_endpoint, most_accessed_count = sorted_endpoints[0]

#FINAL OUTPUT
print("IP Address           Request Count")
for ip, count in sorted_requests:
    print(f"{ip:20}{count}")

print("\nMost Frequently Accessed Endpoint:")
print(f"{most_accessed_endpoint} (Accessed {most_accessed_count} times)")

print("\nSuspicious Activity Detected:")
if sorted_failed_logins:
    print("IP Address           Failed Login Attempts")
    for ip, count in sorted_failed_logins:
        print(f"{ip:20}{count}")
else:
    print("No suspicious activity detected.")

#SAVING RESULT TO CSV
with open(output_csv, 'w', newline='') as csvfile:
    csv_writer = csv.writer(csvfile)

    csv_writer.writerow(['Requests per IP'])
    csv_writer.writerow(['IP Address', 'Request Count'])
    csv_writer.writerows(sorted_requests)

    csv_writer.writerow([])
    csv_writer.writerow(['Most Accessed Endpoint'])
    csv_writer.writerow(['Endpoint', 'Access Count'])
    csv_writer.writerow([most_accessed_endpoint, most_accessed_count])

    csv_writer.writerow([])
    csv_writer.writerow(['Suspicious Activity'])
    csv_writer.writerow(['IP Address', 'Failed Login Count'])
    csv_writer.writerows(sorted_failed_logins)

print(f"\nResults saved to {output_csv}")

